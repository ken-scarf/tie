openapi: "3.0.0"
info:
  version: 1.0.0
  title: simple_violation_bool
  license:
    name: MIT
  description: |
    Simple violation in simple_violation_bool module
servers:
  - url: https://swagger.io/specification/
paths:
  /users/{id}/create/{name}:
    parameters:
      - in: path
        name: id
        description: Uniquely identifies a user
        schema: 
          type: integer
        required: true
      - in: path
        description: Name of a user
        name: name
        schema: 
          type: string
        required: true
      - in: query
        required: true
        name: page
        schema: 
          type: integer
      - in: query
        name: offset
        schema: 
          type: integer
    get:
      operationId: getUser
      responses:
        '200':
          description: xxxx
          content: 
            application/json:
              schema:      # Request body contents
                $ref: "#/components/schemas/Vehicle"
    post:
      operationId: createUser
      summary: Adds a new user
      requestBody:
        description: Some nice request body
        content:
          application/json:
            schema:      # Request body contents
              $ref: "#/components/schemas/NISE"
      responses:
        '200':
          description: xxxx
          content: 
            application/json:
              schema:
                properties: 
                  name: 
                    type: string              
components:
  schemas:
    Vehicle:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: integer
        type:
          type: string
        model:
          type: string
        name:
          type: string
        
    Car:
      allOf:
        - $ref: "#/components/schemas/Vehicle"
        - type: object
          properties:
            type:
              enum:
                - car
            has_4_wheel_drive:
              type: boolean
    
    Plane:
      anyOf:
        - $ref: "#/components/schemas/Vehicle"
        - type: object
          properties:
            type:
              enum:
                - plane
            car: 
              $ref: "#/components/schemas/Car"              
            has_reactor:
              type: boolean
            nb_passengers:
              type: integer
        
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  
    PackageId: 
      oneOf: 
        - $ref: "#/components/schemas/Plane"
        - $ref: "#/components/schemas/Car"
        - type: integer            
        - required:
            - name
            - sub
            - enum
          properties: 
            name: 
              type: string
            age:
              type: integer
            enum: 
              type: string
              enum: 
                - A
                - B
            list: 
              type: array
              items:
                properties: 
                  cool: 
                    type: string
                sub:
              properties: 
                subProperty:
                  type: string
    NISE:
      type: object
      title: The Root Schema
      required:
        - description
        - id
        - name
        - ports
      properties:
        description:
          $ref: "#/components/schemas/PackageId"
        id:
          type: integer
          title: The Id Schema
          default: 0
          format: int64
          schema:
            $ref: './violation_schema.yaml#/NISE'
        name:
          type: string
          title: The Name Schema
          schema:
            $ref: './violation_schema.yaml#/NISE'
        ports:
          type: array
          title: The Ports Schema
          schema:
            $ref: './violation_schema.yaml#/NISE'
          items:
            type: integer
            title: The items Schema
            default: 0
            schema:
              $ref: './violation_schema.yaml#/NISE'
        value:
          type: object
          title: The Value Schema
          properties: 
            name: 
              type: string
          schema:
            $ref: './violation_schema.yaml#/NISE'


